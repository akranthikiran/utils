<queries xmlns:ccg="/fw/ccg/XMLBeanParser">
	<connectionSource ccg:beanType="com.fw.dao.qry.impl.JDBCConnectionSource">
		<driver>com.mysql.jdbc.Driver</driver>
		<dbUrl>jdbc:mysql://localhost:3306/survey</dbUrl>
		<user>kranthi</user>
		<password>kranthi</password>
	</connectionSource>

	<globalProperty name="fullTableList">
		BACKUP_DETAILS,ID_TABLE,DATA_OBJECT,RELATION_TABLE,PROPERTY_TABLE,IDENTITY_TABLE,RULE_TABLE,LOG_ENTRY
	</globalProperty>
	
	<globalProperty name="tableList">
		ID_TABLE,DATA_OBJECT,RELATION_TABLE,PROPERTY_TABLE,IDENTITY_TABLE,RULE_TABLE,LOG_ENTRY
	</globalProperty>
	
	
	<query name="createTokenTable">
		<dbQuery>
			CREATE TABLE TK_TAB_${fieldName}
			(
				IDX_ID	INTEGER NOT NULL,
				TOKEN	VARCHAR(10) NOT NULL,
				WEIGHT	FLOAT,
				
				CONSTRAINT TK_${fieldName}_FK FOREIGN KEY (IDX_ID) REFERENCES SPEECH_INDEX(ID)
			)
		</dbQuery>
	</query>
	
	<query name="addSpeechIndex">
		<param name="#NAME">lower(%NAME)</param>
		
		<dbQuery>
			INSERT INTO SPEECH_INDEX(KEY_STR, BINARY)
			VALUES (${key}, #{binary})
		</dbQuery>
	</query>
	
	<query name="addTokenIndex">
		<dbQuery>
			INSERT INTO TK_TAB_${fieldName}(IDX_ID, TOKEN, WEIGHT)
			VALUES (${indexId}, "${token}", ${weight})
		</dbQuery>
	</query>
	
	<query name="getAppMap_1">
		<param name="#NAME">lower(%NAME)</param>
		
		<dbQuery>
			SELECT APP_NO,NAME
			FROM BAS_APPLICATIONS
			WHERE 1=1
			<appName>AND LOWER(NAME) LIKE '${lower(@appName)}'</appName>
		</dbQuery>
	</query>
	
	<query name="getAppMap_2">
		<param name="#APP_NO">upper(%NAME)</param>
		<param name="#NAME">lower(%NAME)</param>
		
		<dbQuery>
			SELECT APP_NO,NAME
			FROM BAS_APPLICATIONS
			WHERE 1=1
			<appName>AND LOWER(NAME) LIKE '${lower(@appName)}'</appName>
		</dbQuery>
	</query>
	
	<query name="getAppDetails1">
		<dbQuery>
			SELECT APP_NO,APP_VERSION,NAME
			FROM BAS_APPLICATIONS
			WHERE 1=1
			<appNo>AND APP_NO = ${appNo}</appNo>
			<appName>AND LOWER(NAME) LIKE '${lower(@appName)}'</appName>
		</dbQuery>
	</query>

	<query name="getAppDetails8">
		<dbQuery>
			SELECT APP_NO,APP_VERSION,NAME
			FROM BAS_APPLICATIONS
			WHERE 1=1
			<appName>AND LOWER(NAME) IN (${colToStr(@appName,\',\'\,\',\')})</appName>
		</dbQuery>
	</query>
	
	<query name="getAppDetails_param">
		<dbQuery>
			SELECT APP_NO,APP_VERSION,NAME
			FROM BAS_APPLICATIONS
			WHERE 1=1
			AND APP_NO = ?
			AND LOWER(NAME) LIKE 'pop??'
		</dbQuery>
	</query>
	
	<query name="getAppDetails2">
		<dbQuery>
			SELECT APP_NO,APP_VERSION,NAME
			FROM BAS_APPLICATIONS
			WHERE 1=1
			<appNo>AND APP_NO = ${appNo}</appNo>
			<appName>AND LOWER(NAME) LIKE '${lower(@appName)}'</appName>
			<mainFile otherParams="appNo,appName">
				AND LOWER(MAIN_FILE) LIKE '${lower(@mainFile)}'
			</mainFile>
		</dbQuery>
	</query>

	<query name="getAppDetails3">
		<dbQuery>
			SELECT APP_NO,APP_VERSION,NAME
			FROM BAS_APPLICATIONS
			WHERE 1=1
			<appNo minVal="1" maxVal="10">AND APP_NO = ${appNo}</appNo>
			<appVersion ifValue="1" >AND APP_VERSION = ${appVersion}</appVersion>
			<appName minTrimLen="1" maxTrimLen="5">AND LOWER(NAME) LIKE '${lower(@appName)}'</appName>
			<mainFile ifNull="true">AND LOWER(MAIN_FILE) IS NOT NULL</mainFile>
		</dbQuery>
	</query>

	<query name="getAppDetails4">
		<param name="beanConstructor">com.test.qry.Application(int,String,int)</param>
		<param name="constructorParams">%APP_NO,upper(lower(%NAME)),%APP_VERSION</param>
		
		<param name="beanConstructor#dig1">com.test.qry.Application(int,String,int)</param>
		<param name="constructorParams#dig1">%APP_NO,%NAME,%APP_VERSION</param>
		
		<param name="beanConstructor#dig2">com.test.qry.Application(int  appNo,  
																	String ,  int appVersion)</param>
		<param name="constructorParams#dig2">%APP_NO,%NAME,%APP_VERSION</param>
		
		<param name="beanFuncExpr#dig3">toList(%NAME)</param>
		
		<dbQuery>
			SELECT APP_NO,APP_VERSION,NAME
			FROM BAS_APPLICATIONS
			WHERE 1=1
			<appName>AND LOWER(NAME) LIKE '${lower(@appName)}'</appName>
		</dbQuery>
	</query>

	<query name="getAppNames_2">
		<dbQuery>
			SELECT NAME
			FROM BAS_APPLICATIONS
			WHERE 1=1
			AND LOWER(NAME) LIKE ?
		</dbQuery>
	</query>
	
	<query name="getAppDetails4_1">
		<param name="beanConstructor">com.test.qry.Application(int,String,int)</param>
		<param name="constructorParams">%APP_NO,upper(lower(%NAME)),%APP_VERSION</param>
		
		<dbQuery>
			SELECT APP_NO,APP_VERSION,NAME
			FROM BAS_APPLICATIONS
			WHERE 1=1
			AND LOWER(NAME) LIKE LOWER(?)
		</dbQuery>
	</query>
	
	<query name="getAppDetails5">
		<param name="beanType">com.test.qry.Application</param>
		<param name="#digester">propBeanDigester</param>
		
		<dbQuery>
			SELECT APP_NO appNo,APP_VERSION appVersion,NAME appName,MAIN_FILE MAIN_FILE
			FROM BAS_APPLICATIONS
			WHERE 1=1
			<appName>AND LOWER(NAME) LIKE '${lower(@appName)}'</appName>
		</dbQuery>
	</query>

	<query name="getAppDetails5_1">
		<param name="beanType">com.test.qry.Application</param>
		<param name="#digester">propBeanDigester</param>
		
		<colExpr name="appName">upper(%appName)</colExpr>
		
		<dbQuery>
			SELECT APP_NO appNo,APP_VERSION appVersion,NAME appName,MAIN_FILE MAIN_FILE
			FROM BAS_APPLICATIONS
			WHERE 1=1
			<appName>AND LOWER(NAME) LIKE '${lower(@appName)}'</appName>
		</dbQuery>
	</query>

	<query name="bulkInsert">
		<dbQuery>
			INSERT INTO TEST(NAME,AGE)
			VALUES (#{name},#{age})
		</dbQuery>
	</query>
	
</queries>